{
  "uid" : "8aa09b6717e9dc7e",
  "name" : "test_division[range_right_error]",
  "fullName" : "test_pytest.test_pytest_task_two.test_task_two.TestTaskTwo#test_division",
  "historyId" : "f39438a09549d99e835565a914f234eb",
  "time" : {
    "start" : 1611106809773,
    "stop" : 1611106809774,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
  "statusTrace" : "self = <test_task_two.TestTaskTwo object at 0x0000029AE22C5208>, a = 10.01, b = 1, range_left = 5, range_right = 10\n\n    @allure.story(\"除法运算用例\")\n    @pytest.mark.run(order=2)\n    @pytest.mark.usefixtures(\"setup_teardown\")\n    @pytest.mark.flaky(reruns=5, reruns_delay=2)\n    @pytest.mark.parametrize(\"a,b,range_left,range_right\", get_yaml_data(key=\"division\"), ids=get_yaml_data(key=\"ids\"))\n    def test_division(self,a,b,range_left,range_right):\n        r = Calculator.division(a, b)\n        if isinstance(r, float):\n            r = round(r, 2)\n        with allure.step(\"断言\"):\n>           assert (r >= range_left and r <= range_right), \"计算结果小于区间\" if r < range_left else \"计算结果大于区间\" if r > range_left else r\nE           AssertionError: 计算结果大于区间\nE           assert (10.01 >= 5 and 10.01 <= 10)\n\ntest_pytest\\test_pytest_task_two\\test_task_two.py:60: AssertionError",
  "flaky" : true,
  "beforeStages" : [ {
    "name" : "setup_teardown",
    "time" : {
      "start" : 1611106789520,
      "stop" : 1611106789520,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
    "statusTrace" : "self = <test_task_two.TestTaskTwo object at 0x0000029AE22C5208>, a = 10.01, b = 1, range_left = 5, range_right = 10\n\n    @allure.story(\"除法运算用例\")\n    @pytest.mark.run(order=2)\n    @pytest.mark.usefixtures(\"setup_teardown\")\n    @pytest.mark.flaky(reruns=5, reruns_delay=2)\n    @pytest.mark.parametrize(\"a,b,range_left,range_right\", get_yaml_data(key=\"division\"), ids=get_yaml_data(key=\"ids\"))\n    def test_division(self,a,b,range_left,range_right):\n        r = Calculator.division(a, b)\n        if isinstance(r, float):\n            r = round(r, 2)\n        with allure.step(\"断言\"):\n>           assert (r >= range_left and r <= range_right), \"计算结果小于区间\" if r < range_left else \"计算结果大于区间\" if r > range_left else r\nE           AssertionError: 计算结果大于区间\nE           assert (10.01 >= 5 and 10.01 <= 10)\n\ntest_pytest\\test_pytest_task_two\\test_task_two.py:60: AssertionError",
    "steps" : [ {
      "name" : "断言",
      "time" : {
        "start" : 1611106809773,
        "stop" : 1611106809773,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)\n",
      "statusTrace" : "  File \"C:\\Users\\余伟豪\\Desktop\\PythonDemo\\test_pytest\\test_pytest_task_two\\test_task_two.py\", line 60, in test_division\n    assert (r >= range_left and r <= range_right), \"计算结果小于区间\" if r < range_left else \"计算结果大于区间\" if r > range_left else r\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  },
  "afterStages" : [ {
    "name" : "setup_teardown::0",
    "time" : {
      "start" : 1611106819957,
      "stop" : 1611106819957,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "除法运算用例"
  }, {
    "name" : "feature",
    "value" : "作业二"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_teardown')"
  }, {
    "name" : "tag",
    "value" : "flaky(reruns=5, reruns_delay=2)"
  }, {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "parentSuite",
    "value" : "test_pytest.test_pytest_task_two"
  }, {
    "name" : "suite",
    "value" : "test_task_two"
  }, {
    "name" : "subSuite",
    "value" : "TestTaskTwo"
  }, {
    "name" : "host",
    "value" : "DESKTOP-939OH2V"
  }, {
    "name" : "thread",
    "value" : "6820-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_pytest.test_pytest_task_two.test_task_two"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "10.01"
  }, {
    "name" : "b",
    "value" : "1"
  }, {
    "name" : "range_left",
    "value" : "5"
  }, {
    "name" : "range_right",
    "value" : "10"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "18059844dcf5136",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106807758,
        "stop" : 1611106807758,
        "duration" : 0
      }
    }, {
      "uid" : "630b1039b081f37",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106805749,
        "stop" : 1611106805749,
        "duration" : 0
      }
    }, {
      "uid" : "17aa71d6a4dbace",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106803728,
        "stop" : 1611106803728,
        "duration" : 0
      }
    }, {
      "uid" : "c151ff2b21ebda00",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106801708,
        "stop" : 1611106801708,
        "duration" : 0
      }
    }, {
      "uid" : "b2989f7f4ef27074",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106799699,
        "stop" : 1611106799699,
        "duration" : 0
      }
    }, {
      "uid" : "d6465f1c4abd61ce",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106731399,
        "stop" : 1611106731399,
        "duration" : 0
      }
    }, {
      "uid" : "4e5f7db9e5b84f52",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106729379,
        "stop" : 1611106729379,
        "duration" : 0
      }
    }, {
      "uid" : "3cc41c08601898e8",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106727365,
        "stop" : 1611106727365,
        "duration" : 0
      }
    }, {
      "uid" : "d83c1a7d2ee30f37",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106725355,
        "stop" : 1611106725356,
        "duration" : 1
      }
    }, {
      "uid" : "4126d2625debc6d0",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106723327,
        "stop" : 1611106723327,
        "duration" : 0
      }
    }, {
      "uid" : "bbec4044b4eb4d46",
      "status" : "failed",
      "statusDetails" : "AssertionError: 计算结果大于区间\nassert (10.01 >= 5 and 10.01 <= 10)",
      "time" : {
        "start" : 1611106721318,
        "stop" : 1611106721319,
        "duration" : 1
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=2)", "flaky(reruns=5, reruns_delay=2)", "@pytest.mark.usefixtures('setup_teardown')" ]
  },
  "source" : "8aa09b6717e9dc7e.json",
  "parameterValues" : [ "10.01", "1", "5", "10" ]
}